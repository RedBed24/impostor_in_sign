services:
  application_initializer:
    container_name: impostor-application-initializer
    depends_on:
      database:
        condition: service_healthy      
    build:
      context: apps
      dockerfile: application_initializer/Dockerfile
    env_file:
      - .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: "${MONGO_INITDB_ROOT_USERNAME}"
      MONGO_INITDB_ROOT_PASSWORD: "${MONGO_INITDB_ROOT_PASSWORD}"
      MONGO_DB_URL: "mongodb://impostor-database:27017"
    volumes:
      - apps:/shared-data

  database:
    container_name: impostor-database
    image: mongo:8.0.3
    restart: always
    env_file:
      - .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: "${MONGO_INITDB_ROOT_USERNAME}"
      MONGO_INITDB_ROOT_PASSWORD: "${MONGO_INITDB_ROOT_PASSWORD}"
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
      - mongo-log:/var/log/mongodb
    healthcheck:
      test:
        [
          "CMD",
          "mongosh",
          "--quiet",
          "127.0.0.1/test",
          "--eval",
          "'quit(db.runCommand({ ping: 1 }).ok ? 0 : 2)'",
        ]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

  api:
    container_name: impostor-api
    build:
      context: apps
      dockerfile: api/Dockerfile
    env_file:
      - .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: "${MONGO_INITDB_ROOT_USERNAME}"
      MONGO_INITDB_ROOT_PASSWORD: "${MONGO_INITDB_ROOT_PASSWORD}"
      MONGO_DB_URL: "mongodb://impostor-database:27017"
    ports:
      - "8000:8000"
    restart: on-failure
    healthcheck:
      test: curl --fail http://localhost:8000/iamalive || exit 1
      interval: 2s
      timeout: 5s
      retries: 3
      start_period: 5s

  inference_model:
    container_name: impostor-inference-model
    depends_on:
      application_initializer:
        condition: service_completed_successfully
    build:
      context: apps
      dockerfile: inference_model/Dockerfile
    ports:
      - "8080:8000"
    volumes:
      - apps:/shared-data
    restart: on-failure
    healthcheck:
      test: curl --fail http://localhost:8000/iamalive || exit 1
      interval: 2s
      timeout: 5s
      retries: 3
      start_period: 5s

  airflow:
    container_name: impostor-airflow
    depends_on:
      api:
        condition: service_healthy
    build:
      context: apps
      dockerfile: airflow/Dockerfile
    env_file:
      - .env
    environment:
      API_URL: "http://impostor-api:8000"
      _AIRFLOW_WWW_USER_CREATE: 'true'
      _AIRFLOW_WWW_USER_USERNAME: ${_AIRFLOW_WWW_USER_USERNAME:-airflow}
      _AIRFLOW_WWW_USER_PASSWORD: ${_AIRFLOW_WWW_USER_PASSWORD:-airflow}
    ports:
      - "5000:8080"
    volumes:
      - airflow:/opt/airflow
    command: bash -c "airflow db init && airflow scheduler & airflow webserver"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: on-failure

volumes:
  mongo-data:
  mongo-log:
  apps:
  airflow:
